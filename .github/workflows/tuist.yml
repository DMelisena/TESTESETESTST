name: Tuist CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    steps:
      # 1. Check out your repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set the correct Xcode version
      - name: Select Xcode 16.2.0
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2.0'

      # 3. Install Mise and Tuist
      - name: Setup Mise and Tuist
        uses: jdx/mise-action@v2

      # 4. Run Tuist install
      - name: Install dependencies
        run: tuist install
        env:
          TUIST_CONFIG_TOKEN: ${{ secrets.TUIST_TOKEN}}

      # 5. Create API key file for build
      - name: Create GenerativeAI-Info.plist
        run: |
          mkdir -p Nemo/Resources
          cat > Nemo/Resources/GenerativeAI-Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>API_KEY</key>
              <string>dummy-api-key-for-ci</string>
          </dict>
          </plist>
          EOF

      # 6. Install iOS runtime if needed
      - name: Install iOS 17 runtime (fallback)
        run: |
          # Check available runtimes
          xcrun simctl list runtimes
          
          # Create a basic simulator if none exist
          xcrun simctl create "CI-iPhone" "com.apple.CoreSimulator.SimDeviceType.iPhone-15" "com.apple.CoreSimulator.SimRuntime.iOS-17-0" || echo "Simulator creation failed or already exists"

      # 7. Build with the simplest approach - just specify the SDK
      - name: Build project  
        run: tuist build -- -sdk iphonesimulator CODE_SIGNING_ALLOWED=NO
        env:
          TUIST_CONFIG_TOKEN: ${{ secrets.TUIST_TOKEN}}
